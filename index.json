{
  "api/index.html": {
    "href": "api/index.html",
    "title": "Components",
    "keywords": "Components The System.Net.Http.HttpClient handler that is responsible for client credentials authentication is ClientCredentialsAuthenticationHandler . The handler uses a IAccessTokenCache service to cache access tokens. If no token is found in the cache, the service performs a client credentials request to a OAuth2 server. The access token received from the OAuth2 server is validated using a instance of IAccessTokenValidationService"
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes HttpClientCredentialsExtensions Extension methods for and classes"
  },
  "api/Microsoft.Extensions.DependencyInjection.HttpClientCredentialsExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.HttpClientCredentialsExtensions.html",
    "title": "Class HttpClientCredentialsExtensions",
    "keywords": "Class HttpClientCredentialsExtensions Extension methods for and classes Inheritance Object HttpClientCredentialsExtensions Namespace : Microsoft.Extensions.DependencyInjection Assembly : Simployer.Utilities.Http.Authentication.ClientCredentials.dll Syntax public static class HttpClientCredentialsExtensions : object Methods | Improve this Doc View Source AddClientCredentialsAuthentication(IHttpClientBuilder, String, String) Adds a client credentials authentication handler to a Declaration public static IHttpClientBuilder AddClientCredentialsAuthentication(this IHttpClientBuilder builder, string audience, string authority = null) Parameters Type Name Description IHttpClientBuilder builder The String audience The audience the handler should authenticate against String authority Optional authority. If null, uses the first authority found which has the audience Returns Type Description IHttpClientBuilder builder | Improve this Doc View Source AddHttpClientCredentialsAuthentication(IServiceCollection) Adds the required services to perform client credentials authentication to the DI container Declaration public static IServiceCollection AddHttpClientCredentialsAuthentication(this IServiceCollection services) Parameters Type Name Description IServiceCollection services The DI container Returns Type Description IServiceCollection services | Improve this Doc View Source ConfigureClientCredentialsAuthority(IServiceCollection, String, Action<ClientCredentialsAuthorityConfiguration>) Configures a authority for client credentials authentication Declaration public static IServiceCollection ConfigureClientCredentialsAuthority(this IServiceCollection services, string name, Action<ClientCredentialsAuthorityConfiguration> configAction) Parameters Type Name Description IServiceCollection services The DI container String name The name of the authority. Action < ClientCredentialsAuthorityConfiguration > configAction The configuration action Returns Type Description IServiceCollection"
  },
  "api/Simployer.Utilities.Http.Authentication.ClientCredentials.ClientCredentialsExchangeException.html": {
    "href": "api/Simployer.Utilities.Http.Authentication.ClientCredentials.ClientCredentialsExchangeException.html",
    "title": "Class ClientCredentialsExchangeException",
    "keywords": "Class ClientCredentialsExchangeException Exception thrown on error during a client credentials exchange Inheritance Object ClientCredentialsExchangeException Namespace : Simployer.Utilities.Http.Authentication.ClientCredentials Assembly : Simployer.Utilities.Http.Authentication.ClientCredentials.dll Syntax public class ClientCredentialsExchangeException : Exception Constructors | Improve this Doc View Source ClientCredentialsExchangeException() Initializes a new instance of the ClientCredentialsExchangeException class. Declaration public ClientCredentialsExchangeException() | Improve this Doc View Source ClientCredentialsExchangeException(SerializationInfo, StreamingContext) Initializes a new instance of the ClientCredentialsExchangeException class. Declaration protected ClientCredentialsExchangeException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The SerializationInfo that holds the serialized object data about the exception being thrown. StreamingContext context The StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source ClientCredentialsExchangeException(String) Initializes a new instance of the ClientCredentialsExchangeException class. Declaration public ClientCredentialsExchangeException(string message) Parameters Type Name Description String message The message that describes the error. | Improve this Doc View Source ClientCredentialsExchangeException(String, Exception) Initializes a new instance of the ClientCredentialsExchangeException class. Declaration public ClientCredentialsExchangeException(string message, Exception innerException) Parameters Type Name Description String message The error message that explains the reason for the exception. Exception innerException The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified."
  },
  "api/Simployer.Utilities.Http.Authentication.ClientCredentials.ClientCredentialsTokenValidationParameters.html": {
    "href": "api/Simployer.Utilities.Http.Authentication.ClientCredentials.ClientCredentialsTokenValidationParameters.html",
    "title": "Class ClientCredentialsTokenValidationParameters",
    "keywords": "Class ClientCredentialsTokenValidationParameters Extended TokenValidationParameters class that supports a UseKeyFromAuthorityJwks property for determining if a Jwks document should be downloaded from the authority for verifying signatures Inheritance Object ClientCredentialsTokenValidationParameters Namespace : Simployer.Utilities.Http.Authentication.ClientCredentials Assembly : Simployer.Utilities.Http.Authentication.ClientCredentials.dll Syntax public class ClientCredentialsTokenValidationParameters : TokenValidationParameters Properties | Improve this Doc View Source UseKeysFromAuthorityJwks Gets or sets a value indicating whether to use keys from authority JWKS endpoint Declaration public bool UseKeysFromAuthorityJwks { get; set; } Property Value Type Description Boolean true if using keys from authority JWKS; otherwise, false ."
  },
  "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Configuration.ClientCredentialsAudienceConfiguration.html": {
    "href": "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Configuration.ClientCredentialsAudienceConfiguration.html",
    "title": "Class ClientCredentialsAudienceConfiguration",
    "keywords": "Class ClientCredentialsAudienceConfiguration Configuration class for a audience within a authority Inheritance Object ClientCredentialsAudienceConfiguration Namespace : Simployer.Utilities.Http.Authentication.ClientCredentials.Configuration Assembly : Simployer.Utilities.Http.Authentication.ClientCredentials.dll Syntax public class ClientCredentialsAudienceConfiguration : object Properties | Improve this Doc View Source Audience Gets or sets the audience name. Declaration public string Audience { get; set; } Property Value Type Description String The audience that this configuration applies for. | Improve this Doc View Source ClientId Gets or sets the Client Id for this Audience. Declaration public string ClientId { get; set; } Property Value Type Description String The client id to use for this audience. If null, the client id specificed in the authority is used instead | Improve this Doc View Source ClientSecret Gets or sets the Client Secret for this Audience. Declaration public string ClientSecret { get; set; } Property Value Type Description String The client secret. If null, the client secret from the authority is used instead | Improve this Doc View Source TokenValidationParameters Gets or sets the token validation parameters. If null, uses default TokenValidationParameters with issuer validation, audience validation and signature validation Declaration public ClientCredentialsTokenValidationParameters TokenValidationParameters { get; set; } Property Value Type Description ClientCredentialsTokenValidationParameters The token validation parameters."
  },
  "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Configuration.ClientCredentialsAuthorityConfiguration.html": {
    "href": "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Configuration.ClientCredentialsAuthorityConfiguration.html",
    "title": "Class ClientCredentialsAuthorityConfiguration",
    "keywords": "Class ClientCredentialsAuthorityConfiguration A configuration class for client credentials authorities Inheritance Object ClientCredentialsAuthorityConfiguration Namespace : Simployer.Utilities.Http.Authentication.ClientCredentials.Configuration Assembly : Simployer.Utilities.Http.Authentication.ClientCredentials.dll Syntax public class ClientCredentialsAuthorityConfiguration : object Constructors | Improve this Doc View Source ClientCredentialsAuthorityConfiguration(String) Initializes a new instance of the ClientCredentialsAuthorityConfiguration class. Declaration public ClientCredentialsAuthorityConfiguration(string name) Parameters Type Name Description String name The name of the authority Properties | Improve this Doc View Source Audiences Gets the audience list of this authority. Declaration public IList<ClientCredentialsAudienceConfiguration> Audiences { get; } Property Value Type Description IList < ClientCredentialsAudienceConfiguration > The audiences this authority supports | Improve this Doc View Source Authority Gets or sets the authority URI Declaration public Uri Authority { get; set; } Property Value Type Description Uri The authority URI | Improve this Doc View Source ClientId Gets or sets the default Client ID for this authority. This is used if no audience specific Client ID is specified Declaration public string ClientId { get; set; } Property Value Type Description String The client id | Improve this Doc View Source ClientSecret Gets or sets the Client Secret for this authority. This is used if no audience specific Client Secret is specified Declaration public string ClientSecret { get; set; } Property Value Type Description String The client secret. | Improve this Doc View Source JwksPath Gets or sets the JWKS path. Declaration public string JwksPath { get; set; } Property Value Type Description String The JWKS path. The default is .well-known/jwks.json | Improve this Doc View Source Name Gets the name of the authority. Declaration public string Name { get; } Property Value Type Description String The authority name | Improve this Doc View Source TokenPath Gets or sets the token path. Declaration public string TokenPath { get; set; } Property Value Type Description String The token path. The default value is 'oauth/token'"
  },
  "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Configuration.html": {
    "href": "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Configuration.html",
    "title": "Namespace Simployer.Utilities.Http.Authentication.ClientCredentials.Configuration",
    "keywords": "Namespace Simployer.Utilities.Http.Authentication.ClientCredentials.Configuration Classes ClientCredentialsAudienceConfiguration Configuration class for a audience within a authority ClientCredentialsAuthorityConfiguration A configuration class for client credentials authorities"
  },
  "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Handlers.ClientCredentialsAuthenticationHandler.html": {
    "href": "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Handlers.ClientCredentialsAuthenticationHandler.html",
    "title": "Class ClientCredentialsAuthenticationHandler",
    "keywords": "Class ClientCredentialsAuthenticationHandler A HTTP client handler that performs client credentials authentication Inheritance Object ClientCredentialsAuthenticationHandler Namespace : Simployer.Utilities.Http.Authentication.ClientCredentials.Handlers Assembly : Simployer.Utilities.Http.Authentication.ClientCredentials.dll Syntax public class ClientCredentialsAuthenticationHandler : DelegatingHandler Constructors | Improve this Doc View Source ClientCredentialsAuthenticationHandler(String, String, IClientCredentialsService) Initializes a new instance of the ClientCredentialsAuthenticationHandler class. Declaration public ClientCredentialsAuthenticationHandler(string audience, string authority, IClientCredentialsService clientCredentialsService) Parameters Type Name Description String audience The audience this handler is targeting. String authority The authority this handler uses. If null, uses the first authority found that supports audience IClientCredentialsService clientCredentialsService A IClientCredentialsService instance used for authentication Properties | Improve this Doc View Source Audience Gets the audience used for authentication. Declaration public string Audience { get; } Property Value Type Description String The audience. | Improve this Doc View Source Authority Gets the name of the authority used for authentication. Declaration public string Authority { get; } Property Value Type Description String The authority name. If null, uses the first authority found that supports Audience Methods | Improve this Doc View Source SendAsync(HttpRequestMessage, CancellationToken) Declaration protected override Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) Parameters Type Name Description HttpRequestMessage request CancellationToken cancellationToken Returns Type Description Task < HttpResponseMessage >"
  },
  "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Handlers.html": {
    "href": "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Handlers.html",
    "title": "Namespace Simployer.Utilities.Http.Authentication.ClientCredentials.Handlers",
    "keywords": "Namespace Simployer.Utilities.Http.Authentication.ClientCredentials.Handlers Classes ClientCredentialsAuthenticationHandler A HTTP client handler that performs client credentials authentication"
  },
  "api/Simployer.Utilities.Http.Authentication.ClientCredentials.html": {
    "href": "api/Simployer.Utilities.Http.Authentication.ClientCredentials.html",
    "title": "Namespace Simployer.Utilities.Http.Authentication.ClientCredentials",
    "keywords": "Namespace Simployer.Utilities.Http.Authentication.ClientCredentials Classes ClientCredentialsExchangeException Exception thrown on error during a client credentials exchange ClientCredentialsTokenValidationParameters Extended TokenValidationParameters class that supports a UseKeyFromAuthorityJwks property for determining if a Jwks document should be downloaded from the authority for verifying signatures"
  },
  "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Internal.AccessTokenResponse.html": {
    "href": "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Internal.AccessTokenResponse.html",
    "title": "Class AccessTokenResponse",
    "keywords": "Class AccessTokenResponse A OAuth2 access token response Inheritance Object AccessTokenResponse Namespace : Simployer.Utilities.Http.Authentication.ClientCredentials.Internal Assembly : Simployer.Utilities.Http.Authentication.ClientCredentials.dll Syntax public class AccessTokenResponse : object Properties | Improve this Doc View Source AccessToken Gets or sets the access token. Declaration public string AccessToken { get; set; } Property Value Type Description String The access token. | Improve this Doc View Source ExpiresIn Gets or sets the number of seconds until the access token expires Declaration public long ExpiresIn { get; set; } Property Value Type Description Int64 The lifetime of the access token in seconds | Improve this Doc View Source TokenType Gets or sets the type of the token. Declaration public string TokenType { get; set; } Property Value Type Description String The type of the token. Should be 'Bearer'"
  },
  "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Internal.CachedAccessToken.html": {
    "href": "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Internal.CachedAccessToken.html",
    "title": "Class CachedAccessToken",
    "keywords": "Class CachedAccessToken A cached access token Inheritance Object CachedAccessToken Namespace : Simployer.Utilities.Http.Authentication.ClientCredentials.Internal Assembly : Simployer.Utilities.Http.Authentication.ClientCredentials.dll Syntax public class CachedAccessToken : object Properties | Improve this Doc View Source AccessToken Gets or sets the JWT access token. Declaration public string AccessToken { get; set; } Property Value Type Description String The JWT access token. | Improve this Doc View Source Expired Gets a value indicating whether this CachedAccessToken is expired. Declaration public bool Expired { get; } Property Value Type Description Boolean true if expired; otherwise, false . | Improve this Doc View Source Expires Gets or sets the point in time when the access token expires Declaration public DateTime Expires { get; set; } Property Value Type Description DateTime The expiration date of the access token"
  },
  "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Internal.html": {
    "href": "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Internal.html",
    "title": "Namespace Simployer.Utilities.Http.Authentication.ClientCredentials.Internal",
    "keywords": "Namespace Simployer.Utilities.Http.Authentication.ClientCredentials.Internal Classes AccessTokenResponse A OAuth2 access token response CachedAccessToken A cached access token"
  },
  "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Services.AccessTokenCache.html": {
    "href": "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Services.AccessTokenCache.html",
    "title": "Class AccessTokenCache",
    "keywords": "Class AccessTokenCache Access token cache, that is thread-safe and supporting both sync and async retrieval of access tokens Inheritance Object AccessTokenCache Implements IAccessTokenCache Namespace : Simployer.Utilities.Http.Authentication.ClientCredentials.Services Assembly : Simployer.Utilities.Http.Authentication.ClientCredentials.dll Syntax public class AccessTokenCache : object, IAccessTokenCache Methods | Improve this Doc View Source GetOrAddAccessToken(ClientCredentialsAudienceConfiguration, ClientCredentialsAuthorityConfiguration, Func<ClientCredentialsAudienceConfiguration, ClientCredentialsAuthorityConfiguration, CancellationToken, CachedAccessToken>) Get or add access token. Declaration public string GetOrAddAccessToken(ClientCredentialsAudienceConfiguration audience, ClientCredentialsAuthorityConfiguration authority, Func<ClientCredentialsAudienceConfiguration, ClientCredentialsAuthorityConfiguration, CancellationToken, CachedAccessToken> addFunc) Parameters Type Name Description ClientCredentialsAudienceConfiguration audience The desired access token audience. ClientCredentialsAuthorityConfiguration authority The access token authority. Func < ClientCredentialsAudienceConfiguration , ClientCredentialsAuthorityConfiguration , CancellationToken , CachedAccessToken > addFunc The function to call to retrieve a access token if no valid access token exists. Returns Type Description String A JWT access token | Improve this Doc View Source GetOrAddAccessTokenAsync(ClientCredentialsAudienceConfiguration, ClientCredentialsAuthorityConfiguration, Func<ClientCredentialsAudienceConfiguration, ClientCredentialsAuthorityConfiguration, CancellationToken, Task<CachedAccessToken>>, CancellationToken) Get or add access token. Declaration public Task<string> GetOrAddAccessTokenAsync(ClientCredentialsAudienceConfiguration audience, ClientCredentialsAuthorityConfiguration authority, Func<ClientCredentialsAudienceConfiguration, ClientCredentialsAuthorityConfiguration, CancellationToken, Task<CachedAccessToken>> addFunc, CancellationToken cancellationToken) Parameters Type Name Description ClientCredentialsAudienceConfiguration audience The desired access token audience. ClientCredentialsAuthorityConfiguration authority The access token authority. Func < ClientCredentialsAudienceConfiguration , ClientCredentialsAuthorityConfiguration , CancellationToken , Task < CachedAccessToken >> addFunc The function to call to retrieve a access token if no valid access token exists. CancellationToken cancellationToken The cancellation token Returns Type Description Task < String > A JWT access token | Improve this Doc View Source Invalidate(ClientCredentialsAudienceConfiguration, ClientCredentialsAuthorityConfiguration, String) Invalidate a access token. Declaration public void Invalidate(ClientCredentialsAudienceConfiguration audience, ClientCredentialsAuthorityConfiguration authority, string accessToken) Parameters Type Name Description ClientCredentialsAudienceConfiguration audience The audience the token belongs to. ClientCredentialsAuthorityConfiguration authority The authority the token belongs to. String accessToken The JWT access token. Implements IAccessTokenCache See Also IAccessTokenCache"
  },
  "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Services.AccessTokenValidationService.html": {
    "href": "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Services.AccessTokenValidationService.html",
    "title": "Class AccessTokenValidationService",
    "keywords": "Class AccessTokenValidationService A service for validating access tokens Inheritance Object AccessTokenValidationService Implements IAccessTokenValidationService Namespace : Simployer.Utilities.Http.Authentication.ClientCredentials.Services Assembly : Simployer.Utilities.Http.Authentication.ClientCredentials.dll Syntax public class AccessTokenValidationService : object, IAccessTokenValidationService Constructors | Improve this Doc View Source AccessTokenValidationService(HttpClient) Initializes a new instance of the AccessTokenValidationService class. Declaration public AccessTokenValidationService(HttpClient httpClient) Parameters Type Name Description HttpClient httpClient The HTTP client to use for retrieving Json Web Key Sets (JWKS). Methods | Improve this Doc View Source ValidateTokenAsync(ClientCredentialsAudienceConfiguration, ClientCredentialsAuthorityConfiguration, String) Validate a access token Declaration public Task<ClaimsPrincipal> ValidateTokenAsync(ClientCredentialsAudienceConfiguration audience, ClientCredentialsAuthorityConfiguration authority, string token) Parameters Type Name Description ClientCredentialsAudienceConfiguration audience The audience to validate against. ClientCredentialsAuthorityConfiguration authority The authority to validate against. String token The JWT access token. Returns Type Description Task < ClaimsPrincipal > A Implements IAccessTokenValidationService See Also IAccessTokenValidationService"
  },
  "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Services.ClientCredentialsService.html": {
    "href": "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Services.ClientCredentialsService.html",
    "title": "Class ClientCredentialsService",
    "keywords": "Class ClientCredentialsService A service for performing client credentials authentication Inheritance Object ClientCredentialsService Implements IClientCredentialsService Namespace : Simployer.Utilities.Http.Authentication.ClientCredentials.Services Assembly : Simployer.Utilities.Http.Authentication.ClientCredentials.dll Syntax public class ClientCredentialsService : object, IClientCredentialsService Constructors | Improve this Doc View Source ClientCredentialsService(IAccessTokenCache, IAccessTokenValidationService, HttpClient, IEnumerable<ClientCredentialsAuthorityConfiguration>) Initializes a new instance of the ClientCredentialsService class. Declaration public ClientCredentialsService(IAccessTokenCache accessTokenCache, IAccessTokenValidationService accessTokenValidationService, HttpClient httpClient, IEnumerable<ClientCredentialsAuthorityConfiguration> configurations) Parameters Type Name Description IAccessTokenCache accessTokenCache The access token cache. IAccessTokenValidationService accessTokenValidationService The access token validation service. HttpClient httpClient The HTTP client used for sending token requests. IEnumerable < ClientCredentialsAuthorityConfiguration > configurations All configured authorities. Methods | Improve this Doc View Source AuthenticateForAudienceAsync(String, String, CancellationToken) Authenticate against a audience. Declaration public Task<string> AuthenticateForAudienceAsync(string audience, string authority, CancellationToken cancellationToken) Parameters Type Name Description String audience The audience to authenticate against. String authority The authority. If null, uses the first authority that supports audience CancellationToken cancellationToken Returns Type Description Task < String > A JWT access token | Improve this Doc View Source InvalidateAccessToken(String, String, String) Invalidates a access token. Called when a access token is rejected Declaration public void InvalidateAccessToken(string audience, string authority, string accessToken) Parameters Type Name Description String audience The audience. String authority The authority. String accessToken The access token. Implements IClientCredentialsService See Also IClientCredentialsService"
  },
  "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Services.html": {
    "href": "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Services.html",
    "title": "Namespace Simployer.Utilities.Http.Authentication.ClientCredentials.Services",
    "keywords": "Namespace Simployer.Utilities.Http.Authentication.ClientCredentials.Services Classes AccessTokenCache Access token cache, that is thread-safe and supporting both sync and async retrieval of access tokens AccessTokenValidationService A service for validating access tokens ClientCredentialsService A service for performing client credentials authentication Interfaces IAccessTokenCache Access token cache, that is thread-safe and supporting both sync and async retrieval of access tokens IAccessTokenValidationService A service for validating access tokens IClientCredentialsService A service for performing client credentials authentication"
  },
  "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Services.IAccessTokenCache.html": {
    "href": "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Services.IAccessTokenCache.html",
    "title": "Interface IAccessTokenCache",
    "keywords": "Interface IAccessTokenCache Access token cache, that is thread-safe and supporting both sync and async retrieval of access tokens Namespace : Simployer.Utilities.Http.Authentication.ClientCredentials.Services Assembly : Simployer.Utilities.Http.Authentication.ClientCredentials.dll Syntax public interface IAccessTokenCache Methods | Improve this Doc View Source GetOrAddAccessToken(ClientCredentialsAudienceConfiguration, ClientCredentialsAuthorityConfiguration, Func<ClientCredentialsAudienceConfiguration, ClientCredentialsAuthorityConfiguration, CancellationToken, CachedAccessToken>) Get or add access token. Declaration string GetOrAddAccessToken(ClientCredentialsAudienceConfiguration audience, ClientCredentialsAuthorityConfiguration authority, Func<ClientCredentialsAudienceConfiguration, ClientCredentialsAuthorityConfiguration, CancellationToken, CachedAccessToken> addFunc) Parameters Type Name Description ClientCredentialsAudienceConfiguration audience The desired access token audience. ClientCredentialsAuthorityConfiguration authority The access token authority. Func < ClientCredentialsAudienceConfiguration , ClientCredentialsAuthorityConfiguration , CancellationToken , CachedAccessToken > addFunc The function to call to retrieve a access token if no valid access token exists. Returns Type Description String A JWT access token | Improve this Doc View Source GetOrAddAccessTokenAsync(ClientCredentialsAudienceConfiguration, ClientCredentialsAuthorityConfiguration, Func<ClientCredentialsAudienceConfiguration, ClientCredentialsAuthorityConfiguration, CancellationToken, Task<CachedAccessToken>>, CancellationToken) Get or add access token. Declaration Task<string> GetOrAddAccessTokenAsync(ClientCredentialsAudienceConfiguration audience, ClientCredentialsAuthorityConfiguration authority, Func<ClientCredentialsAudienceConfiguration, ClientCredentialsAuthorityConfiguration, CancellationToken, Task<CachedAccessToken>> addFunc, CancellationToken cancellationToken) Parameters Type Name Description ClientCredentialsAudienceConfiguration audience The desired access token audience. ClientCredentialsAuthorityConfiguration authority The access token authority. Func < ClientCredentialsAudienceConfiguration , ClientCredentialsAuthorityConfiguration , CancellationToken , Task < CachedAccessToken >> addFunc The function to call to retrieve a access token if no valid access token exists. CancellationToken cancellationToken The cancellation token Returns Type Description Task < String > A JWT access token | Improve this Doc View Source Invalidate(ClientCredentialsAudienceConfiguration, ClientCredentialsAuthorityConfiguration, String) Invalidate a access token. Declaration void Invalidate(ClientCredentialsAudienceConfiguration audience, ClientCredentialsAuthorityConfiguration authority, string accessToken) Parameters Type Name Description ClientCredentialsAudienceConfiguration audience The audience the token belongs to. ClientCredentialsAuthorityConfiguration authority The authority the token belongs to. String accessToken The JWT access token. See Also AccessTokenCache"
  },
  "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Services.IAccessTokenValidationService.html": {
    "href": "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Services.IAccessTokenValidationService.html",
    "title": "Interface IAccessTokenValidationService",
    "keywords": "Interface IAccessTokenValidationService A service for validating access tokens Namespace : Simployer.Utilities.Http.Authentication.ClientCredentials.Services Assembly : Simployer.Utilities.Http.Authentication.ClientCredentials.dll Syntax public interface IAccessTokenValidationService Methods | Improve this Doc View Source ValidateTokenAsync(ClientCredentialsAudienceConfiguration, ClientCredentialsAuthorityConfiguration, String) Validate a access token Declaration Task<ClaimsPrincipal> ValidateTokenAsync(ClientCredentialsAudienceConfiguration audience, ClientCredentialsAuthorityConfiguration authority, string token) Parameters Type Name Description ClientCredentialsAudienceConfiguration audience The audience to validate against. ClientCredentialsAuthorityConfiguration authority The authority to validate against. String token The JWT access token. Returns Type Description Task < ClaimsPrincipal > A See Also AccessTokenValidationService"
  },
  "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Services.IClientCredentialsService.html": {
    "href": "api/Simployer.Utilities.Http.Authentication.ClientCredentials.Services.IClientCredentialsService.html",
    "title": "Interface IClientCredentialsService",
    "keywords": "Interface IClientCredentialsService A service for performing client credentials authentication Namespace : Simployer.Utilities.Http.Authentication.ClientCredentials.Services Assembly : Simployer.Utilities.Http.Authentication.ClientCredentials.dll Syntax public interface IClientCredentialsService Methods | Improve this Doc View Source AuthenticateForAudienceAsync(String, String, CancellationToken) Authenticate against a audience. Declaration Task<string> AuthenticateForAudienceAsync(string audience, string authority, CancellationToken cancellation) Parameters Type Name Description String audience The audience to authenticate against. String authority The authority. If null, uses the first authority that supports audience CancellationToken cancellation The cancellation token Returns Type Description Task < String > A JWT access token | Improve this Doc View Source InvalidateAccessToken(String, String, String) Invalidates a access token. Called when a access token is rejected Declaration void InvalidateAccessToken(string audience, string authority, string accessToken) Parameters Type Name Description String audience The audience. String authority The authority. String accessToken The access token. See Also ClientCredentialsService"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Welcome to the documenation for Simployer.Utilities.Http.Authentication.ClientCredentials",
    "keywords": "Welcome to the documenation for Simployer.Utilities.Http.Authentication.ClientCredentials Simployer.Utilities.Http.Authentication.ClientCredentials provides a simple way to setup OAuth2 Client Credentials authentication when using HttpClient. It integrates with Microsoft.Extensions.Http to make it easy to authenticate a client accessing a protected API."
  },
  "articles/quickstart.html": {
    "href": "articles/quickstart.html",
    "title": "Getting Started",
    "keywords": "Getting Started Dependencies Install the required package to the project: dotnet add package Simployer.Utilities.Http.Authentication.ClientCredentials Setup For the package to work, the required services must first be added to the DI container // Add required services to DI container services.AddHttpClientCredentialsAuthentication(); Atleast one OAuth2 authority must be added. In this case we use \"Auth0\" for its descriptive name, assuming we are going to use Auth0 for our OAuth2 server. The Authority Uri is fetched from Configuration using the key Auth0:Authority . The authority must have a TokenPath specified (unless it is oauth/token ), and it should also have JwksPath specified. The TokenPath is a path to the OAuth2 token endpoint, relative to the Authority Uri. The JwksPath is a path to a Json Web Key Set document, again, relative to the Authority Uri. A audience must also be provided. In most cases an audience is a protected API. The audience must also have a ClientId + ClientSecret // Add authority and audiences services.ConfigureClientCredentialsAuthority(\"Auth0\", config => { config.Authority = new Uri(Configuration[\"Auth0:Authority\"]); config.TokenPath = \"oauth/token\"; config.JwksPath = \".well-known/jwks.json\"; config.Audiences.Add(new ClientCredentialsAudienceConfiguration { Audience = \"https://apis.simployer.com\"; ClientId = Configuration[\"Auth0:ClientId\"]; ClientSecret = Configuration[\"Auth0:ClientSecret\"]; }); }); Adding client credentials authentication works in a similar fashion to how other handlers are added to HttpClient instances via Microsoft.Extensions.Http (eg, Polly ). In this example, a named HttpClient with name Simployer API Services is added, which uses client credentials authentication against a https://apis.simployer.com audience. MyApiService is added as a typed client. This class will receive a HttpClient in its constructor that uses client credentials authentication against the https://apis.simployer.com audience. // Configure a named HttpClient called 'Simployer API Services' that require client credentials authentication against the `https://apis.simployer.com` audience. // Also add a typed client `MyApiService` that uses this named HttpClient services.AddHttpClient(\"Simployer API Services\") .AddClientCredentialsAuthentication(\"https://apis.simployer.com\") .AddTypedClient<MyApiService>();"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the documentation for Simployer.Utilities.Http.Authentication.ClientCredentials",
    "keywords": "This is the documentation for Simployer.Utilities.Http.Authentication.ClientCredentials Links"
  },
  "README.html": {
    "href": "README.html",
    "title": "Simployer.Utilities.Http.Authentication.ClientCredentials",
    "keywords": "Simployer.Utilities.Http.Authentication.ClientCredentials View Documentation View API Reference Quickstart // Add required services to DI container services.AddHttpClientCredentialsAuthentication(); // Add authority and audiences services.ConfigureClientCredentialsAuthority(\"Auth0\", config => { config.Authority = new Uri(Configuration[\"Auth0:Authority\"]); config.TokenPath = \"oauth/token\"; config.JwksPath = \".well-known/jwks.json\"; config.Audiences.Add(new ClientCredentialsAudienceConfiguration { Audience = \"https://apis.simployer.com\"; ClientId = Configuration[\"Auth0:ClientId\"]; ClientSecret = Configuration[\"Auth0:ClientSecret\"]; }); }); // Configure a named HttpClient called 'Simployer API Services' that require client credentials authentication against the `https://apis.simployer.com` audience. // Also add a typed client `MyApiService` that uses this named HttpClient services.AddHttpClient(\"Simployer API Services\") .AddClientCredentialsAuthentication(\"https://apis.simployer.com\") .AddTypedClient<MyApiService>();"
  }
}